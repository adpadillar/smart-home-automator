import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
} from "@/components/ui/card";
import type { NextPage } from "next";
import Head from "next/head";
import { useAuthState } from "react-firebase-hooks/auth";
import { auth } from "~/client/firebase";
import { signOut } from "~/client/login";
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";

import Redirect from "~/components/Redirect";
import { useRefData } from "~/client/hooks/useRefData";
import { Input } from "@/components/ui/input";
import { useEffect, useState } from "react";

interface SettingsPageProps {
  children?: React.ReactNode;
}

const SettingsPage: NextPage<SettingsPageProps> = () => {
  const [user, loading] = useAuthState(auth);
  const [refreshRateState, setRefreshRateState] = useState(0);
  const [actuatorRefreshRateState, setActuatorRefreshRateState] = useState(0);
  const [refreshRate, refreshRateLoading] = useRefData<number>({
    path: "_refresh_rate",
  });
  const [actuatorRefreshRate, actuatorRefreshRateLoading] = useRefData<number>({
    path: "_refresh_rate_actuator",
  });

  useEffect(() => {
    if (!refreshRateLoading && refreshRate) {
      setRefreshRateState(refreshRate?.[0] ?? 1000);
    }
  }, [refreshRateLoading]);

  useEffect(() => {
    if (!actuatorRefreshRateLoading && actuatorRefreshRate) {
      setActuatorRefreshRateState(actuatorRefreshRate?.[0] ?? 1000);
    }
  }, [actuatorRefreshRateLoading]);

  if (!loading && !user) return <Redirect path="/login" />;
  return (
    <div className="px-4 py-2">
      <Head>
        <title>Configuración - Smart Home Automator</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="grid grid-cols-1 gap-4 md:grid-cols-5">
        <div className="col-span-1 row-span-1 md:col-span-2 md:row-span-3">
          <Card>
            <CardHeader>
              {!loading && user && (
                <div className="flex items-center space-x-3">
                  <Avatar>
                    <AvatarImage src={user.photoURL ?? undefined} />
                    <AvatarFallback>
                      {user.email?.slice(0, 2).toUpperCase()}
                    </AvatarFallback>
                  </Avatar>
                  <p>{user.email}</p>
                </div>
              )}
            </CardHeader>
            <CardFooter>
              <Button className="w-full" onClick={signOut}>
                Cerrar sesión
              </Button>
            </CardFooter>
          </Card>
        </div>
        <Card className="col-span-1 md:col-span-3">
          <CardHeader>Información de uso</CardHeader>
          <CardContent>
            <Accordion type="single" collapsible>
              <AccordionItem value="item-1">
                <AccordionTrigger>Guía de Uso</AccordionTrigger>
                <AccordionContent>
                  <iframe
                    className="aspect-video w-full rounded-md shadow-xl"
                    src="https://www.youtube.com/embed/4DNv8i0bFMg?si=cYd6JpHABjHC9N7G"
                    title="YouTube video player"
                    frameBorder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                    allowFullScreen
                  />
                </AccordionContent>
              </AccordionItem>
              <AccordionItem value="item-2">
                <AccordionTrigger>Nuestro Equipo</AccordionTrigger>
                <AccordionContent>
                  <ul>
                    <li>A01642700 - Axel Daniel Padilla Reyes</li>
                    <li>A01635782 - Diego Enrique Vargas Ramírez</li>
                    <li>A01642924 - Diana Nicole Arana Sánchez</li>
                    <li>A01637254 - Luis Fernando Cuevas Arroyo</li>
                    <li>A01643189 - Francisco Javier Romo Juárez</li>
                  </ul>
                </AccordionContent>
              </AccordionItem>
            </Accordion>
          </CardContent>
        </Card>
        <Card className="col-span-1 md:col-span-3">
          <CardHeader>Configuración del equipo</CardHeader>
          <CardContent>
            <Accordion type="multiple">
              <AccordionItem value="item-2">
                <AccordionTrigger>Sensores</AccordionTrigger>
                <AccordionContent>
                  <div className="flex-col space-y-2">
                    <p>Tasa de refresco de los sensores: </p>
                    <div className="flex space-x-2">
                      <Input
                        type="number"
                        value={refreshRateState}
                        onChange={(e) => {
                          setRefreshRateState(
                            Math.max(500, parseInt(e.target.value)),
                          );
                        }}
                      />
                      <Button
                        variant="outline"
                        disabled={refreshRateState == refreshRate?.[0]}
                      >
                        Actualizar
                      </Button>
                    </div>
                  </div>
                </AccordionContent>
              </AccordionItem>
              <AccordionItem value="item-1">
                <AccordionTrigger>Actuadores</AccordionTrigger>
                <AccordionContent>
                  <div className="flex-col space-y-2">
                    <p>Tasa de refresco de los actuadores: </p>
                    <div className="flex space-x-2">
                      <Input
                        type="number"
                        value={actuatorRefreshRateState}
                        onChange={(e) => {
                          setActuatorRefreshRateState(
                            Math.max(1000, parseInt(e.target.value)),
                          );
                        }}
                      />
                      <Button
                        variant="outline"
                        disabled={
                          actuatorRefreshRateState == actuatorRefreshRate?.[0]
                        }
                      >
                        Actualizar
                      </Button>
                    </div>
                  </div>
                </AccordionContent>
              </AccordionItem>
            </Accordion>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default SettingsPage;
